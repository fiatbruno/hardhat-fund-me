/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ef3380380610ef38339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610d9a806101596000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c57806377c9dd4b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107ac565b610525565b6040516100d891906107f2565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906107f2565b60405180910390f35b34801561011857600080fd5b5061012161054a565b60405161012e919061086c565b60405180910390f35b34801561014357600080fd5b5061014c610570565b6040516101599190610896565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108dd565b610596565b6040516101a09190610896565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d590919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610967565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109b6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610415576000600182815481106103905761038f6109ea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d90610a19565b91505061036d565b50600067ffffffffffffffff81111561043157610430610a61565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600190805190602001906104759291906106a2565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610ac1565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b22565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e183610611565b90506000670de0b6b3a764000085836105fa9190610b42565b6106049190610bb3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610c71565b5050509150506402540be4008161069a9190610cec565b915050919050565b82805482825590600052602060002090810192821561071b579160200282015b8281111561071a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c2565b5b509050610728919061072c565b5090565b5b8082111561074557600081600090555060010161072d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107798261074e565b9050919050565b6107898161076e565b811461079457600080fd5b50565b6000813590506107a681610780565b92915050565b6000602082840312156107c2576107c1610749565b5b60006107d084828501610797565b91505092915050565b6000819050919050565b6107ec816107d9565b82525050565b600060208201905061080760008301846107e3565b92915050565b6000819050919050565b600061083261082d6108288461074e565b61080d565b61074e565b9050919050565b600061084482610817565b9050919050565b600061085682610839565b9050919050565b6108668161084b565b82525050565b6000602082019050610881600083018461085d565b92915050565b6108908161076e565b82525050565b60006020820190506108ab6000830184610887565b92915050565b6108ba816107d9565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b6000602082840312156108f3576108f2610749565b5b6000610901848285016108c8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610951601b8361090a565b915061095c8261091b565b602082019050919050565b6000602082019050818103600083015261098081610944565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c1826107d9565b91506109cc836107d9565b92508282019050808211156109e4576109e3610987565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a24826107d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5657610a55610987565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aab600083610a90565b9150610ab682610a9b565b600082019050919050565b6000610acc82610a9e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b0c600b8361090a565b9150610b1782610ad6565b602082019050919050565b60006020820190508181036000830152610b3b81610aff565b9050919050565b6000610b4d826107d9565b9150610b58836107d9565b9250828202610b66816107d9565b91508282048414831517610b7d57610b7c610987565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bbe826107d9565b9150610bc9836107d9565b925082610bd957610bd8610b84565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0381610be4565b8114610c0e57600080fd5b50565b600081519050610c2081610bfa565b92915050565b6000819050919050565b610c3981610c26565b8114610c4457600080fd5b50565b600081519050610c5681610c30565b92915050565b600081519050610c6b816108b1565b92915050565b600080600080600060a08688031215610c8d57610c8c610749565b5b6000610c9b88828901610c11565b9550506020610cac88828901610c47565b9450506040610cbd88828901610c5c565b9350506060610cce88828901610c5c565b9250506080610cdf88828901610c11565b9150509295509295909350565b6000610cf782610c26565b9150610d0283610c26565b9250828202610d1081610c26565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d4857610d47610987565b5b8282058414831517610d5d57610d5c610987565b5b509291505056fea26469706673582212209f02da3088bc0ccfed5af021d198d7870ce8e1b27bf71ec11ff08a43cca1149764736f6c63430008110033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
