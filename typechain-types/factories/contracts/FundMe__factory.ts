/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620011fe380380620011fe83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161108562000179600039600081816101fd0152818161044c01526105d601526110856000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a97565b6101b3565b6040516100b49190610add565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e961043b565b6040516100f69190610add565b60405180910390f35b34801561010b57600080fd5b50610114610448565b6040516101219190610b07565b60405180910390f35b34801561013657600080fd5b5061013f610470565b60405161014c9190610b81565b60405180910390f35b61015d61049a565b005b34801561016b57600080fd5b506101746105d4565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bc8565b610878565b6040516101aa9190610b07565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561032b576000600182815481106102a6576102a5610bf5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032390610c53565b915050610283565b50600067ffffffffffffffff81111561034757610346610c9b565b5b6040519080825280602002602001820160405280156103755781602001602082028036833780820191505090505b506001908051906020019061038b92919061098d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b290610cfb565b60006040518083038185875af1925050503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b5050905080610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610d6d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104d9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c090919063ffffffff16565b101561051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610dd9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105689190610df9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610659576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610693575b5050505050905060005b815181101561076757600082828151811061070557610704610bf5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075f90610c53565b9150506106e7565b50600067ffffffffffffffff81111561078357610782610c9b565b5b6040519080825280602002602001820160405280156107b15781602001602082028036833780820191505090505b50600190805190602001906107c792919061098d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107ee90610cfb565b60006040518083038185875af1925050503d806000811461082b576040519150601f19603f3d011682016040523d82523d6000602084013e610830565b606091505b5050905080610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90610d6d565b60405180910390fd5b5050565b60006001828154811061088e5761088d610bf5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108cc836108fc565b90506000670de0b6b3a764000085836108e59190610e2d565b6108ef9190610e9e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e9190610f5c565b5050509150506402540be400816109859190610fd7565b915050919050565b828054828255906000526020600020908101928215610a06579160200282015b82811115610a055782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ad565b5b509050610a139190610a17565b5090565b5b80821115610a30576000816000905550600101610a18565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6482610a39565b9050919050565b610a7481610a59565b8114610a7f57600080fd5b50565b600081359050610a9181610a6b565b92915050565b600060208284031215610aad57610aac610a34565b5b6000610abb84828501610a82565b91505092915050565b6000819050919050565b610ad781610ac4565b82525050565b6000602082019050610af26000830184610ace565b92915050565b610b0181610a59565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b6000819050919050565b6000610b47610b42610b3d84610a39565b610b22565b610a39565b9050919050565b6000610b5982610b2c565b9050919050565b6000610b6b82610b4e565b9050919050565b610b7b81610b60565b82525050565b6000602082019050610b966000830184610b72565b92915050565b610ba581610ac4565b8114610bb057600080fd5b50565b600081359050610bc281610b9c565b92915050565b600060208284031215610bde57610bdd610a34565b5b6000610bec84828501610bb3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5e82610ac4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9057610c8f610c24565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ce5600083610cca565b9150610cf082610cd5565b600082019050919050565b6000610d0682610cd8565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d57600b83610d10565b9150610d6282610d21565b602082019050919050565b60006020820190508181036000830152610d8681610d4a565b9050919050565b7f596f75206e65656420746f2073656e64206d6f72652045544821000000000000600082015250565b6000610dc3601a83610d10565b9150610dce82610d8d565b602082019050919050565b60006020820190508181036000830152610df281610db6565b9050919050565b6000610e0482610ac4565b9150610e0f83610ac4565b9250828201905080821115610e2757610e26610c24565b5b92915050565b6000610e3882610ac4565b9150610e4383610ac4565b9250828202610e5181610ac4565b91508282048414831517610e6857610e67610c24565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea982610ac4565b9150610eb483610ac4565b925082610ec457610ec3610e6f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eee81610ecf565b8114610ef957600080fd5b50565b600081519050610f0b81610ee5565b92915050565b6000819050919050565b610f2481610f11565b8114610f2f57600080fd5b50565b600081519050610f4181610f1b565b92915050565b600081519050610f5681610b9c565b92915050565b600080600080600060a08688031215610f7857610f77610a34565b5b6000610f8688828901610efc565b9550506020610f9788828901610f32565b9450506040610fa888828901610f47565b9350506060610fb988828901610f47565b9250506080610fca88828901610efc565b9150509295509295909350565b6000610fe282610f11565b9150610fed83610f11565b9250828202610ffb81610f11565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103357611032610c24565b5b828205841483151761104857611047610c24565b5b509291505056fea2646970667358221220f352da206b07bdec9868675cd239efa10c8dcf04c9a5fd8ddc6ddf4c76b6aafd64736f6c63430008110033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
