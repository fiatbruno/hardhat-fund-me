/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620012163803806200121683398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161109d620001796000396000818161034f0152818161059e01526105ee015261109d6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aaf565b610305565b6040516100cc9190610af5565b60405180910390f35b3480156100e157600080fd5b506100ea61034d565b005b3480156100f857600080fd5b5061010161058d565b60405161010e9190610af5565b60405180910390f35b34801561012357600080fd5b5061012c61059a565b6040516101399190610b1f565b60405180910390f35b34801561014e57600080fd5b506101576105c2565b6040516101649190610b99565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105ec565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610be0565b610890565b6040516101c29190610b1f565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d890919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c6a565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610cb9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561047d576000600182815481106103f8576103f7610ced565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047590610d1c565b9150506103d5565b50600067ffffffffffffffff81111561049957610498610d64565b5b6040519080825280602002602001820160405280156104c75781602001602082028036833780820191505090505b50600190805190602001906104dd9291906109a5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050490610dc4565b60006040518083038185875af1925050503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b505090508061058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610e25565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610671576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ab575b5050505050905060005b815181101561077f57600082828151811061071d5761071c610ced565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077790610d1c565b9150506106ff565b50600067ffffffffffffffff81111561079b5761079a610d64565b5b6040519080825280602002602001820160405280156107c95781602001602082028036833780820191505090505b50600190805190602001906107df9291906109a5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161080690610dc4565b60006040518083038185875af1925050503d8060008114610843576040519150601f19603f3d011682016040523d82523d6000602084013e610848565b606091505b505090508061088c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088390610e25565b60405180910390fd5b5050565b6000600182815481106108a6576108a5610ced565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108e483610914565b90506000670de0b6b3a764000085836108fd9190610e45565b6109079190610eb6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109869190610f74565b5050509150506402540be4008161099d9190610fef565b915050919050565b828054828255906000526020600020908101928215610a1e579160200282015b82811115610a1d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c5565b5b509050610a2b9190610a2f565b5090565b5b80821115610a48576000816000905550600101610a30565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7c82610a51565b9050919050565b610a8c81610a71565b8114610a9757600080fd5b50565b600081359050610aa981610a83565b92915050565b600060208284031215610ac557610ac4610a4c565b5b6000610ad384828501610a9a565b91505092915050565b6000819050919050565b610aef81610adc565b82525050565b6000602082019050610b0a6000830184610ae6565b92915050565b610b1981610a71565b82525050565b6000602082019050610b346000830184610b10565b92915050565b6000819050919050565b6000610b5f610b5a610b5584610a51565b610b3a565b610a51565b9050919050565b6000610b7182610b44565b9050919050565b6000610b8382610b66565b9050919050565b610b9381610b78565b82525050565b6000602082019050610bae6000830184610b8a565b92915050565b610bbd81610adc565b8114610bc857600080fd5b50565b600081359050610bda81610bb4565b92915050565b600060208284031215610bf657610bf5610a4c565b5b6000610c0484828501610bcb565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c54601b83610c0d565b9150610c5f82610c1e565b602082019050919050565b60006020820190508181036000830152610c8381610c47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc482610adc565b9150610ccf83610adc565b9250828201905080821115610ce757610ce6610c8a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2782610adc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d5957610d58610c8a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dae600083610d93565b9150610db982610d9e565b600082019050919050565b6000610dcf82610da1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e0f600b83610c0d565b9150610e1a82610dd9565b602082019050919050565b60006020820190508181036000830152610e3e81610e02565b9050919050565b6000610e5082610adc565b9150610e5b83610adc565b9250828202610e6981610adc565b91508282048414831517610e8057610e7f610c8a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec182610adc565b9150610ecc83610adc565b925082610edc57610edb610e87565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0681610ee7565b8114610f1157600080fd5b50565b600081519050610f2381610efd565b92915050565b6000819050919050565b610f3c81610f29565b8114610f4757600080fd5b50565b600081519050610f5981610f33565b92915050565b600081519050610f6e81610bb4565b92915050565b600080600080600060a08688031215610f9057610f8f610a4c565b5b6000610f9e88828901610f14565b9550506020610faf88828901610f4a565b9450506040610fc088828901610f5f565b9350506060610fd188828901610f5f565b9250506080610fe288828901610f14565b9150509295509295909350565b6000610ffa82610f29565b915061100583610f29565b925082820261101381610f29565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561104b5761104a610c8a565b5b82820584148315176110605761105f610c8a565b5b509291505056fea264697066735822122044b4058cd7fc2ebd27658cdba8a5e829f86a0bbcd462c545a73dfe584fb55fd564736f6c63430008110033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
