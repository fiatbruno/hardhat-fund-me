/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b67982a51ff699da0cc60c01b61008b60201b60201c565b6100456781b15127b03b47b160c01b61008b60201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008e565b50565b6111b98061009d6000396000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461015c57806377c9dd4b14610187578063b60d4288146101b2578063dc0d3dff146101bc57610097565b80630d8e6e2c146100dd5780633ccfd60b146101085780633e47d6f31461011f57610097565b366100975761008d6792ffe50f70a8cbe460c01b6101f9565b6100956101fc565b005b6100ab678523c22feee5a5af60c01b6101f9565b6100bf673431669e0604bbee60c01b6101f9565b6100d36780dd1abe25ba637d60c01b6101f9565b6100db6101fc565b005b3480156100e957600080fd5b506100f26103aa565b6040516100ff9190610bce565b60405180910390f35b34801561011457600080fd5b5061011d61049e565b005b34801561012b57600080fd5b5061014660048036038101906101419190610c4c565b610884565b6040516101539190610bce565b60405180910390f35b34801561016857600080fd5b5061017161089c565b60405161017e9190610bce565b60405180910390f35b34801561019357600080fd5b5061019c6108a9565b6040516101a99190610c88565b60405180910390f35b6101ba6101fc565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610ccf565b6108cf565b6040516101f09190610c88565b60405180910390f35b50565b61021067cf33a5e9315df20e60c01b6101f9565b610224670d022475de085dec60c01b6101f9565b6102386764ec88af8ed8f0da60c01b6101f9565b61024c671f3218b76c3c59ef60c01b6101f9565b6802b5e3af16b188000061025f3461090e565b10156102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610d59565b60405180910390fd5b6102b4672f14a7a939c49bba60c01b6101f9565b6102c8673af131992365e87160c01b6101f9565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103169190610da8565b9250508190555061033167d5a5a5f9d9fa6a5260c01b6101f9565b610345673bfb89e3dc8dd7fa60c01b6101f9565b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006103c067811f6df69986ab8e60c01b6101f9565b6103d467843f8b55675ba12060c01b6101f9565b6103e8670ce09eac47e7827a60c01b6101f9565b600073d4a33860578de61dbabdc8bfdb98fd742fa7028e905061041567d36913943d456c3960c01b6101f9565b61042967fe9cd15133a0463260c01b6101f9565b8073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610df1565b91505090565b6104b267a4c97f35348b235060c01b6101f9565b6104c667e3074558073c661860c01b6101f9565b6104da678c99fd98f9ae252360c01b6101f9565b6104ee67aa637593c2a0e00160c01b6101f9565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610589576105576778cd5110a004b7bd60c01b6101f9565b6040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059d67683652eae4702f4660c01b6101f9565b6105b167edbbd042ceda88f260c01b6101f9565b6105c567a0dc04225c9b69ce60c01b6101f9565b6105d967a5007a6de39baa9d60c01b6101f9565b6105ed679ec950ee1b463e3d60c01b6101f9565b610601679418c218b7dc9db760c01b6101f9565b60005b6001805490508110156106e857610625678d0d954b37aa364360c01b6101f9565b6106396764b9667eb168575260c01b6101f9565b60006001828154811061064f5761064e610e1e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061069067475f168a0783c9fc60c01b6101f9565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106e090610e4d565b915050610604565b506106fd67f02235bf56e0feba60c01b6101f9565b600067ffffffffffffffff81111561071857610717610e95565b5b6040519080825280602002602001820160405280156107465781602001602082028036833780820191505090505b506001908051906020019061075c929190610b0e565b5061077167eec4e99748a04f4660c01b6101f9565b610785671008a6973867558160c01b6101f9565b60003373ffffffffffffffffffffffffffffffffffffffff16476040516107ab90610ef5565b60006040518083038185875af1925050503d80600081146107e8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ed565b606091505b5050905061080567c818dad44a508a4b60c01b6101f9565b610819675f3d8c68f80e1bcc60c01b6101f9565b61082d673bd2393f3488c91f60c01b6101f9565b8061086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490610f56565b60405180910390fd5b61088167203801e44a7087ce60c01b6101f9565b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106108df57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610924671230743f0ac72a3a60c01b6109d5565b61093867f7b80873df671bd360c01b6109d5565b61094c6736ca11e06d3a893360c01b6109d5565b60006109566109d8565b905061096c67bbf90d75416e573760c01b6109d5565b610980672cad25e459e95d0660c01b6109d5565b6000670de0b6b3a764000084836109979190610f76565b6109a19190610fe7565b90506109b767df7b9cdfa772de0060c01b6109d5565b6109cb674313104ffb0a189d60c01b6109d5565b8092505050919050565b50565b60006109ee6721c8d608e18fb9aa60c01b6109d5565b610a0267462e0524ac27377760c01b6109d5565b610a166766443f65f4218de760c01b6109d5565b600073d4a33860578de61dbabdc8bfdb98fd742fa7028e9050610a436730736121218ceb9960c01b6109d5565b610a5767049536478bbe0fe360c01b6109d5565b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac89190611090565b505050915050610ae267443359c0c4b97d5c60c01b6109d5565b610af6676c4e93cf9d31e33f60c01b6109d5565b6402540be40081610b07919061110b565b9250505090565b828054828255906000526020600020908101928215610b87579160200282015b82811115610b865782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b2e565b5b509050610b949190610b98565b5090565b5b80821115610bb1576000816000905550600101610b99565b5090565b6000819050919050565b610bc881610bb5565b82525050565b6000602082019050610be36000830184610bbf565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c1982610bee565b9050919050565b610c2981610c0e565b8114610c3457600080fd5b50565b600081359050610c4681610c20565b92915050565b600060208284031215610c6257610c61610be9565b5b6000610c7084828501610c37565b91505092915050565b610c8281610c0e565b82525050565b6000602082019050610c9d6000830184610c79565b92915050565b610cac81610bb5565b8114610cb757600080fd5b50565b600081359050610cc981610ca3565b92915050565b600060208284031215610ce557610ce4610be9565b5b6000610cf384828501610cba565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d43601b83610cfc565b9150610d4e82610d0d565b602082019050919050565b60006020820190508181036000830152610d7281610d36565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db382610bb5565b9150610dbe83610bb5565b9250828201905080821115610dd657610dd5610d79565b5b92915050565b600081519050610deb81610ca3565b92915050565b600060208284031215610e0757610e06610be9565b5b6000610e1584828501610ddc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e5882610bb5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e8a57610e89610d79565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610edf600083610ec4565b9150610eea82610ecf565b600082019050919050565b6000610f0082610ed2565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f40600b83610cfc565b9150610f4b82610f0a565b602082019050919050565b60006020820190508181036000830152610f6f81610f33565b9050919050565b6000610f8182610bb5565b9150610f8c83610bb5565b9250828202610f9a81610bb5565b91508282048414831517610fb157610fb0610d79565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff282610bb5565b9150610ffd83610bb5565b92508261100d5761100c610fb8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61103781611018565b811461104257600080fd5b50565b6000815190506110548161102e565b92915050565b6000819050919050565b61106d8161105a565b811461107857600080fd5b50565b60008151905061108a81611064565b92915050565b600080600080600060a086880312156110ac576110ab610be9565b5b60006110ba88828901611045565b95505060206110cb8882890161107b565b94505060406110dc88828901610ddc565b93505060606110ed88828901610ddc565b92505060806110fe88828901611045565b9150509295509295909350565b60006111168261105a565b91506111218361105a565b925082820261112f8161105a565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561116757611166610d79565b5b828205841483151761117c5761117b610d79565b5b509291505056fea2646970667358221220bd495c580e13c4de99893862f75cdba1ab63e7d9be8fb32e40a308588137cd0564736f6c63430008110033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
